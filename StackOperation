class GfG{
	public void push(int a,Stack<Integer> s)
	{
	    if(s.isEmpty()==true)
	    {
	        s.push(a);
	    }
	    else
	    {
	        int min=s.pop();
	        if(a>min)
	        {
	            s.push(a);
	            s.push(min);
	        }
	        else
	        {
	            s.push(min);
	            s.push(a);
	        }
	    }
	    //add code here.
	}
	public int pop(Stack<Integer> s)
        {
            int pop=s.pop();
            return pop;
            //add code here.
	}
	public int min(Stack<Integer> s)
        {
            if(s.isEmpty()==true)
            return 0;
            else
            return s.peek();
           //add code here.
	}
	public boolean isFull(Stack<Integer>s, int n)
        {
            if(s.size()==n)
            return true;
            else
            return false;
           //add code here.
	}
	public boolean isEmpty(Stack<Integer>s)
        {
            if(s.isEmpty())
            return true;
            else
            return false;
           //add code here.
	}
}
